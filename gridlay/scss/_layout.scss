// responsive breakpoints
$sm: 576px;
$md: 768px;
$lg: 992px;
$xl: 1200px;

// global vars for containers
$max-container-width: 1310px;
$fluid-container-width: 100%;

// global vars for flex based grid
$cols-count: 12;
$gutter-width: 10px;

// hides x overflow
%overflow-x-hidden {
  overflow-x: hidden;
}

// removes the gutters
%no-x-margin {
  margin-left: 0;
  margin-right: 0;
}

// centered container if viewport width is bigger than max-container-width
.container {
  max-width: $max-container-width;
  margin: 0 auto;
  @extend %overflow-x-hidden;
}

// fluid container equal to viewport width
.fluid-container {
  width: $fluid-container-width;
  @extend %overflow-x-hidden;
}

// flex row for flex based grid
.f-row {
  display: flex;
  flex-wrap: wrap;
  margin-right: -$gutter-width / 2;
  margin-left: -$gutter-width / 2;
}

// adds gutters for flex-row children
.f-row > * {
  margin-right: $gutter-width / 2;
  margin-left: $gutter-width / 2;
}

// removes gutters from flex grid elements
.f-row.no-gap {
  @extend %no-x-margin;

  & > * {
    @extend %no-x-margin;
  }
}

// default auto
.f-col {
  flex: 1 0;
  max-width: 100%;
}

// 1-12 cols percentage of width
@for $i from 1 through $cols-count {
  $p: percentage($i / $cols-count);

  .f-col-#{$i} {
    width: $p;
    flex-basis: $p;
  }
}

// display utilities
.d-none {
  display: none;
}

.d-flex {
  display: flex;
}

.d-inline-flex {
  display: inline-flex;
}

.d-block {
  display: block;
}

.d-inline {
  display: inline;
}

.d-inline-block {
  display: inline-block;
}

.d-grid {
  display: grid;
}

.d-inline-grid {
  display: inline-grid;
}

// make flex wrap
.f-wrap {
  flex-wrap: wrap;
}

// make flex nowrap
.f-nowrap {
  flex-wrap: nowrap;
}

// change flex direction
.f-direction-col {
  flex-direction: column;
}

.f-direction-row {
  flex-direction: row;
}

.f-direction-col-reverse {
  flex-direction: column-reverse;
}

.f-direction-row-reverse {
  flex-direction: row-reverse;
}

// flex utility classes
.align-items-start {
  align-items: flex-start;
}

.align-items-center {
  align-items: center;
}

.align-items-stretch {
  align-items: stretch;
}

.align-items-end {
  align-items: flex-end;
}

.align-items-baseline {
  align-items: baseline;
}

.justify-content-start {
  justify-content: flex-start;
}

.justify-content-center {
  justify-content: center;
}

.justify-content-end {
  justify-content: flex-end;
}

.justify-content-evenly {
  justify-content: space-evenly;
}

.justify-content-around {
  justify-content: space-around;
}

.justify-content-between {
  justify-content: space-between;
}

.align-content-start {
  align-content: flex-start;
}

.align-content-center {
  align-content: center;
}

.align-content-stretch {
  align-content: stretch;
}

.align-content-end {
  align-content: flex-end;
}

.align-content-evenly {
  align-content: space-evenly;
}

.align-content-around {
  align-content: space-around;
}

.align-content-between {
  align-content: space-between;
}

.align-self-start {
  align-self: start;
}

.align-self-center {
  align-self: center;
}

.align-self-stretch {
  align-self: stretch;
}

.align-self-end {
  align-self: end;
}

.align-self-baseline {
  align-self: baseline;
}

// media query for small screen size
@media (min-width: $sm) {
  // responsive col from small screen size
  @for $i from 1 through $cols-count {
    $p: percentage($i / $cols-count);

    .f-col-sm-#{$i} {
      width: $p;
      flex-basis: $p;
    }
  }

  // auto col from sm size
  .f-col-sm {
    flex: 1 0;
    max-width: 100%;
  }

  // display utilities from sm
  .d-none-sm {
    display: none;
  }

  .d-flex-sm {
    display: flex;
  }

  .d-inline-flex-sm {
    display: inline-flex;
  }

  .d-block-sm {
    display: block;
  }

  .d-inline-sm {
    display: inline;
  }

  .d-inline-block-sm {
    display: inline-block;
  }

  .d-grid-sm {
    display: grid;
  }

  .d-inline-grid-sm {
    display: inline-grid;
  }

  // make flex wrap from sm size
  .f-wrap-sm {
    flex-wrap: wrap;
  }

  // make flex nowrap from sm size
  .f-nowrap-sm {
    flex-wrap: nowrap;
  }

  // change flex direction from sm
  .f-direction-col-sm {
    flex-direction: column;
  }

  .f-direction-row-sm {
    flex-direction: row;
  }

  .f-direction-col-reverse-sm {
    flex-direction: column-reverse;
  }

  .f-direction-row-reverse-sm {
    flex-direction: row-reverse;
  }

  // flex utility classes from sm size
  .align-items-start-sm {
    align-items: flex-start;
  }

  .align-items-center-sm {
    align-items: center;
  }

  .align-items-stretch-sm {
    align-items: stretch;
  }

  .align-items-end-sm {
    align-items: flex-end;
  }

  .align-items-baseline-sm {
    align-items: baseline;
  }

  .justify-content-start-sm {
    justify-content: flex-start;
  }

  .justify-content-center-sm {
    justify-content: center;
  }

  .justify-content-end-sm {
    justify-content: flex-end;
  }

  .justify-content-evenly-sm {
    justify-content: space-evenly;
  }

  .justify-content-around-sm {
    justify-content: space-around;
  }

  .justify-content-between-sm {
    justify-content: space-between;
  }

  .align-content-start-sm {
    align-content: flex-start;
  }

  .align-content-center-sm {
    align-content: center;
  }

  .align-content-stretch-sm {
    align-content: stretch;
  }

  .align-content-end-sm {
    align-content: flex-end;
  }

  .align-content-evenly-sm {
    align-content: space-evenly;
  }

  .align-content-around-sm {
    align-content: space-around;
  }

  .align-content-between-sm {
    align-content: space-between;
  }

  .align-self-start-sm {
    align-self: start;
  }

  .align-self-center-sm {
    align-self: center;
  }

  .align-self-stretch-sm {
    align-self: stretch;
  }

  .align-self-end-sm {
    align-self: end;
  }

  .align-self-baseline-sm {
    align-self: baseline;
  }
}

// media query for medium screen size
@media (min-width: $md) {
  // responsive col from medium screen size
  @for $i from 1 through $cols-count {
    $p: percentage($i / $cols-count);

    .f-col-md-#{$i} {
      width: $p;
      flex-basis: $p;
    }
  }

  // auto col from medium screen size
  .f-col-md {
    flex: 1 0;
    max-width: 100%;
  }

  // display utilities from md
  .d-none-md {
    display: none;
  }

  .d-flex-md {
    display: flex;
  }

  .d-inline-flex-md {
    display: inline-flex;
  }

  .d-block-md {
    display: block;
  }

  .d-inline-md {
    display: inline;
  }

  .d-inline-block-md {
    display: inline-block;
  }

  .d-grid-md {
    display: grid;
  }

  .d-inline-grid-md {
    display: inline-grid;
  }

  // make flex wrap from md size
  .f-wrap-md {
    flex-wrap: wrap;
  }

  // make flex nowrap from md size
  .f-nowrap-md {
    flex-wrap: nowrap;
  }

  // change flex direction from md
  .f-direction-col-md {
    flex-direction: column;
  }

  .f-direction-row-md {
    flex-direction: row;
  }

  .f-direction-col-reverse-md {
    flex-direction: column-reverse;
  }

  .f-direction-row-reverse-md {
    flex-direction: row-reverse;
  }

  // flex utility classes from md size
  .align-items-start-md {
    align-items: flex-start;
  }

  .align-items-center-md {
    align-items: center;
  }

  .align-items-stretch-md {
    align-items: stretch;
  }

  .align-items-end-md {
    align-items: flex-end;
  }

  .align-items-baseline-md {
    align-items: baseline;
  }

  .justify-content-start-md {
    justify-content: flex-start;
  }

  .justify-content-center-md {
    justify-content: center;
  }

  .justify-content-end-md {
    justify-content: flex-end;
  }

  .justify-content-evenly-md {
    justify-content: space-evenly;
  }

  .justify-content-around-md {
    justify-content: space-around;
  }

  .justify-content-between-md {
    justify-content: space-between;
  }

  .align-content-start-md {
    align-content: flex-start;
  }

  .align-content-center-md {
    align-content: center;
  }

  .align-content-stretch-md {
    align-content: stretch;
  }

  .align-content-end-md {
    align-content: flex-end;
  }

  .align-content-evenly-md {
    align-content: space-evenly;
  }

  .align-content-around-md {
    align-content: space-around;
  }

  .align-content-between-md {
    align-content: space-between;
  }

  .align-self-start-md {
    align-self: start;
  }

  .align-self-center-md {
    align-self: center;
  }

  .align-self-stretch-md {
    align-self: stretch;
  }

  .align-self-end-md {
    align-self: end;
  }

  .align-self-baseline-md {
    align-self: baseline;
  }
}

// media query for large screen size
@media (min-width: $lg) {
  // responsive col from large screen size
  @for $i from 1 through $cols-count {
    $p: percentage($i / $cols-count);

    .f-col-lg-#{$i} {
      width: $p;
      flex-basis: $p;
    }
  }

  // auto col from lg screen size
  .f-col-lg {
    flex: 1 0;
    max-width: 100%;
  }

  // display utilities from lg
  .d-none-lg {
    display: none;
  }

  .d-flex-lg {
    display: flex;
  }

  .d-inline-flex-lg {
    display: inline-flex;
  }

  .d-block-lg {
    display: block;
  }

  .d-inline-lg {
    display: inline;
  }

  .d-inline-block-lg {
    display: inline-block;
  }

  .d-grid-lg {
    display: grid;
  }

  .d-inline-grid-lg {
    display: inline-grid;
  }

  // make flex wrap from lg size
  .f-wrap-lg {
    flex-wrap: wrap;
  }

  // make flex nowrap from lg size
  .f-nowrap-lg {
    flex-wrap: nowrap;
  }

  // change flex direction from lg
  .f-direction-col-lg {
    flex-direction: column;
  }

  .f-direction-row-lg {
    flex-direction: row;
  }

  .f-direction-col-reverse-lg {
    flex-direction: column-reverse;
  }

  .f-direction-row-reverse-lg {
    flex-direction: row-reverse;
  }

  // flex utility classes from lg size
  .align-items-start-lg {
    align-items: flex-start;
  }

  .align-items-center-lg {
    align-items: center;
  }

  .align-items-stretch-lg {
    align-items: stretch;
  }

  .align-items-end-lg {
    align-items: flex-end;
  }

  .align-items-baseline-lg {
    align-items: baseline;
  }

  .justify-content-start-lg {
    justify-content: flex-start;
  }

  .justify-content-center-lg {
    justify-content: center;
  }

  .justify-content-end-lg {
    justify-content: flex-end;
  }

  .justify-content-evenly-lg {
    justify-content: space-evenly;
  }

  .justify-content-around-lg {
    justify-content: space-around;
  }

  .justify-content-between-lg {
    justify-content: space-between;
  }

  .align-content-start-lg {
    align-content: flex-start;
  }

  .align-content-center-lg {
    align-content: center;
  }

  .align-content-stretch-lg {
    align-content: stretch;
  }

  .align-content-end-lg {
    align-content: flex-end;
  }

  .align-content-evenly-lg {
    align-content: space-evenly;
  }

  .align-content-around-lg {
    align-content: space-around;
  }

  .align-content-between-lg {
    align-content: space-between;
  }

  .align-self-start-lg {
    align-self: start;
  }

  .align-self-center-lg {
    align-self: center;
  }

  .align-self-stretch-lg {
    align-self: stretch;
  }

  .align-self-end-lg {
    align-self: end;
  }

  .align-self-baseline-lg {
    align-self: baseline;
  }
}

// media query for extra large screen size
@media (min-width: $xl) {
  // responsive col from extra large screen size
  @for $i from 1 through $cols-count {
    $p: percentage($i / $cols-count);

    .f-col-xl-#{$i} {
      width: $p;
      flex-basis: $p;
    }
  }

  // auto col from xl screen size
  .f-col-xl {
    flex: 1 0;
    max-width: 100%;
  }

  // display utilities from xl
  .d-none-xl {
    display: none;
  }

  .d-flex-xl {
    display: flex;
  }

  .d-inline-flex-xl {
    display: inline-flex;
  }

  .d-block-xl {
    display: block;
  }

  .d-inline-xl {
    display: inline;
  }

  .d-inline-block-xl {
    display: inline-block;
  }

  .d-grid-xl {
    display: grid;
  }

  .d-inline-grid-xl {
    display: inline-grid;
  }

  // make flex wrap from xl size
  .f-wrap-xl {
    flex-wrap: wrap;
  }

  // make flex nowrap from xl size
  .f-nowrap-xl {
    flex-wrap: nowrap;
  }

  // change flex direction from xl
  .f-direction-col-xl {
    flex-direction: column;
  }

  .f-direction-row-xl {
    flex-direction: row;
  }

  .f-direction-col-reverse-xl {
    flex-direction: column-reverse;
  }

  .f-direction-row-reverse-xl {
    flex-direction: row-reverse;
  }

  // flex utility classes from xl size
  .align-items-start-xl {
    align-items: flex-start;
  }

  .align-items-center-xl {
    align-items: center;
  }

  .align-items-stretch-xl {
    align-items: stretch;
  }

  .align-items-end-xl {
    align-items: flex-end;
  }

  .align-items-baseline-xl {
    align-items: baseline;
  }

  .justify-content-start-xl {
    justify-content: flex-start;
  }

  .justify-content-center-xl {
    justify-content: center;
  }

  .justify-content-end-xl {
    justify-content: flex-end;
  }

  .justify-content-evenly-xl {
    justify-content: space-evenly;
  }

  .justify-content-around-xl {
    justify-content: space-around;
  }

  .justify-content-between-xl {
    justify-content: space-between;
  }

  .align-content-start-xl {
    align-content: flex-start;
  }

  .align-content-center-xl {
    align-content: center;
  }

  .align-content-stretch-xl {
    align-content: stretch;
  }

  .align-content-end-xl {
    align-content: flex-end;
  }

  .align-content-evenly-xl {
    align-content: space-evenly;
  }

  .align-content-around-xl {
    align-content: space-around;
  }

  .align-content-between-xl {
    align-content: space-between;
  }

  .align-self-start-xl {
    align-self: start;
  }

  .align-self-center-xl {
    align-self: center;
  }

  .align-self-stretch-xl {
    align-self: stretch;
  }

  .align-self-end-xl {
    align-self: end;
  }

  .align-self-baseline-xl {
    align-self: baseline;
  }
}
